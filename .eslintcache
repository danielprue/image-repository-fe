[{"C:\\Users\\Daniel\\Coding Projects\\image-repository\\client\\src\\App.js":"1","C:\\Users\\Daniel\\Coding Projects\\image-repository\\client\\src\\pages\\Home.js":"2","C:\\Users\\Daniel\\Coding Projects\\image-repository\\client\\src\\index.js":"3","C:\\Users\\Daniel\\Coding Projects\\image-repository\\client\\src\\pages\\ImageDetails.js":"4","C:\\Users\\Daniel\\Coding Projects\\image-repository\\client\\src\\components\\UploadModal.js":"5","C:\\Users\\Daniel\\Coding Projects\\image-repository\\client\\src\\components\\EditableTagGroup.js":"6"},{"size":11568,"mtime":1610710867352,"results":"7","hashOfConfig":"8"},{"size":5724,"mtime":1610710946617,"results":"9","hashOfConfig":"8"},{"size":316,"mtime":1610053857589,"results":"10","hashOfConfig":"8"},{"size":7390,"mtime":1610710977886,"results":"11","hashOfConfig":"8"},{"size":7110,"mtime":1610710923223,"results":"12","hashOfConfig":"8"},{"size":2346,"mtime":1610394805830,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"33ml0j",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Daniel\\Coding Projects\\image-repository\\client\\src\\App.js",[],"C:\\Users\\Daniel\\Coding Projects\\image-repository\\client\\src\\pages\\Home.js",[],"C:\\Users\\Daniel\\Coding Projects\\image-repository\\client\\src\\index.js",[],["28","29"],"C:\\Users\\Daniel\\Coding Projects\\image-repository\\client\\src\\pages\\ImageDetails.js",[],"C:\\Users\\Daniel\\Coding Projects\\image-repository\\client\\src\\components\\UploadModal.js",["30"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Input, Modal, Pagination, Steps, Upload } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport EditableTagGroup from '../components/EditableTagGroup';\r\n\r\nconst { Step } = Steps;\r\n\r\nconst UploadModal = (props) => {\r\n  //steps state\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  // Image wall state\r\n  const [fileList, setFileList] = useState([]);\r\n  // Image details info\r\n  const [imageDetailsPage, setImageDetailsPage] = useState(0);\r\n  const [imageNames, setImageNames] = useState({});\r\n  const [imageDescriptions, setImageDescriptions] = useState({});\r\n  const [imageTags, setImageTags] = useState({});\r\n\r\n  // Image data for postgres db\r\n  const [imageData, setImageData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(fileList, imageNames, imageDescriptions, imageTags, imageData);\r\n    if (imageData.length === fileList.length && imageData.length > 0) {\r\n      for (const image of imageData) {\r\n        console.log(image);\r\n        fetch(`${process.env.REACT_APP_API}/api/photos/upload`, {\r\n          method: 'POST',\r\n          body: JSON.stringify(image),\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      }\r\n    }\r\n  }, [imageData]);\r\n\r\n  const handleUploadChange = ({ fileList }) => setFileList(fileList);\r\n\r\n  const handleUploadNext = () => {\r\n    console.log(fileList);\r\n    if (uploadProgress === 1) {\r\n      fetch(`${process.env.REACT_APP_API}/api/auth/signature`, {\r\n        method: 'POST',\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          const { signature, timestamp } = data;\r\n          const form = new FormData();\r\n          for (let i = 0; i < fileList.length; i++) {\r\n            let file = fileList[i];\r\n            form.append('file', file.originFileObj);\r\n            form.append('api_key', process.env.REACT_APP_CLOUDINARY_API_KEY);\r\n            form.append('timestamp', timestamp);\r\n            form.append('signature', signature);\r\n\r\n            fetch(\r\n              `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_CLOUD_NAME}/image/upload`,\r\n              {\r\n                method: 'POST',\r\n                body: form,\r\n              }\r\n            )\r\n              .then((response) => {\r\n                return response.json();\r\n              })\r\n              .then((data) => {\r\n                const thisImage = {\r\n                  public_id: data.public_id,\r\n                  name: imageNames[i] || 'no name',\r\n                  image_path: data.secure_url,\r\n                  height: data.height,\r\n                  width: data.width,\r\n                  description: imageDescriptions[i] || 'no description',\r\n                  tags: imageTags[i] || [],\r\n                  uploader: localStorage.getItem('user'),\r\n                };\r\n                setImageData((imageData) => [...imageData, thisImage]);\r\n                console.log('updated image data', imageData);\r\n              });\r\n          }\r\n        });\r\n    }\r\n    setUploadProgress(uploadProgress + 1);\r\n  };\r\n\r\n  const handleUploadPrevious = () => {\r\n    setUploadProgress(uploadProgress - 1);\r\n  };\r\n\r\n  const handleUploadOk = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleUploadCancel = () => {\r\n    props.handleUploadOnCancel();\r\n    setFileList([]);\r\n    setImageDescriptions({});\r\n    setImageNames({});\r\n    setImageTags({});\r\n    setUploadProgress(0);\r\n    setImageDetailsPage(0);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setImageDetailsPage(page - 1);\r\n    console.log(page - 1, fileList[page - 1]);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setImageNames({ ...imageNames, [imageDetailsPage]: event.target.value });\r\n  };\r\n\r\n  const handleDescriptionChange = (event) => {\r\n    setImageDescriptions({\r\n      ...imageDescriptions,\r\n      [imageDetailsPage]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title='Upload Images'\r\n        visible={props.isUploadModalVisible}\r\n        onCancel={handleUploadCancel}\r\n        footer={[\r\n          <Button\r\n            key='previous'\r\n            onClick={handleUploadPrevious}\r\n            className={uploadProgress !== 2 ? null : 'hidden'}\r\n            disabled={uploadProgress === 0}\r\n          >\r\n            Previous\r\n          </Button>,\r\n\r\n          <Button\r\n            key='next'\r\n            onClick={handleUploadNext}\r\n            className={uploadProgress !== 2 ? null : 'hidden'}\r\n            disabled={uploadProgress === 2 || fileList.length === 0}\r\n          >\r\n            Next\r\n          </Button>,\r\n          <Button\r\n            key='close'\r\n            type='primary'\r\n            onClick={handleUploadOk}\r\n            className={uploadProgress === 2 ? null : 'hidden'}\r\n            disabled={uploadProgress !== 2}\r\n          >\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Steps progressDot current={uploadProgress}>\r\n          <Step title='Choose Images' />\r\n          <Step title='Add Details' />\r\n          <Step title='Finish' />\r\n        </Steps>\r\n\r\n        {uploadProgress === 0 ? (\r\n          <Upload\r\n            listType='picture-card'\r\n            fileList={fileList}\r\n            showUploadList={{ showPreviewIcon: false }}\r\n            onChange={handleUploadChange}\r\n            beforeUpload={() => false}\r\n          >\r\n            {fileList.length >= 10 ? null : (\r\n              <div>\r\n                <PlusOutlined />\r\n                <div style={{ marginTop: 8 }}>Upload</div>\r\n              </div>\r\n            )}\r\n          </Upload>\r\n        ) : null}\r\n\r\n        {uploadProgress === 1 ? (\r\n          <>\r\n            {fileList.map((image, i) => {\r\n              return (\r\n                <div\r\n                  key={i}\r\n                  className={\r\n                    imageDetailsPage === i\r\n                      ? 'image-details-container'\r\n                      : 'hidden'\r\n                  }\r\n                >\r\n                  <img src={image.thumbUrl} alt={image.name} />\r\n                  <div className='image-details-form'>\r\n                    Name:\r\n                    <Input onChange={handleNameChange} />\r\n                    Description:\r\n                    <Input onChange={handleDescriptionChange} />\r\n                    <EditableTagGroup\r\n                      ImageTags={imageTags}\r\n                      setImageTags={setImageTags}\r\n                      imageNumber={i}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className='pagination-container'>\r\n              <Pagination\r\n                simple\r\n                onChange={handlePageChange}\r\n                total={fileList.length}\r\n                defaultPageSize={1}\r\n              />\r\n            </div>\r\n          </>\r\n        ) : null}\r\n\r\n        {uploadProgress === 2 ? <></> : null}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadModal;\r\n","C:\\Users\\Daniel\\Coding Projects\\image-repository\\client\\src\\components\\EditableTagGroup.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":38,"column":6,"nodeType":"37","endLine":38,"endColumn":17,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fileList', 'imageDescriptions', 'imageNames', and 'imageTags'. Either include them or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [fileList, imageData, imageDescriptions, imageNames, imageTags]",{"range":"44","text":"45"},[1341,1352],"[fileList, imageData, imageDescriptions, imageNames, imageTags]"]